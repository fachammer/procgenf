apply plugin: 'application'

mainClassName = 'com.fabianachammer.procgenf.main.Main'
applicationDefaultJvmArgs = ["-XstartOnFirstThread", "-Djava.awt.headless=true"]



sourceSets.all { set ->
  def jarTask = task("${set.name}Jar", type: Jar) {
      baseName = baseName + "-$set.name"
      from set.output
  }

  artifacts {
    archives jarTask
  }
}

sourceSets {
  api
  impl
}

dependencies {
  ext.lwjglVersion = '3.0.0b'
  ext.jomlVersion = '1.6.6'
  ext.flowNoiseVersion = '1.0.0'
  ext.apacheCommonsLangVersion = '3.4'
  
  apiCompile project(':power-voronoi-diagram')
  
  implCompile project(':power-voronoi-diagram')
  implCompile sourceSets.api.output
  implCompile "org.lwjgl:lwjgl:$lwjglVersion"
  implCompile "org.lwjgl:lwjgl-platform:$lwjglVersion:natives-windows"
  implCompile "org.lwjgl:lwjgl-platform:$lwjglVersion:natives-linux"
  implCompile "org.lwjgl:lwjgl-platform:$lwjglVersion:natives-osx"
  implCompile "org.joml:joml:$jomlVersion"
  implCompile "com.flowpowered:flow-noise:$flowNoiseVersion"
  implCompile "org.apache.commons:commons-lang3:$apacheCommonsLangVersion"

  testCompile 'junit:junit:4.9'
  testCompile sourceSets.api.output
  testCompile sourceSets.impl.output
  
  apiRuntime sourceSets.impl.output
  
  runtime configurations.apiRuntime
  runtime configurations.implRuntime
}

jar {
    from sourceSets.api.output
    from sourceSets.impl.output
}
